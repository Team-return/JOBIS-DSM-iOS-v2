name: CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  CACHED_DEPENDENCY_PATHS: ${{ github.workspace }}/Tuist/Dependencies

jobs:
  prepare-dependency:
    name: ‚öôÔ∏è prepare for CI
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Tuist
        run: curl -Ls https://install.tuist.io | bash

      - name: Compute dependency cache key
        id: compute_hash
        run: echo "hash=${{ hashFiles('Tuist/Dependencies.swift') }}" >> $GITHUB_OUTPUT

      - name: Check dependency cache
        uses: actions/cache@v3
        id: cache_dependencies
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_hash.outputs.hash }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit == ''
        run: tuist fetch
    outputs:
      dependency_cache_key: ${{ steps.compute_hash.outputs.hash }}

  build:
    name: üè¢ Build
    runs-on: macos-latest
    needs: prepare-dependency

    steps:
    - uses: actions/checkout@v2
      with:
        xcode-version: latest

    - name: install tuist
      run: curl -Ls https://install.tuist.io | bash
      
    - name: Check dependency cache
      uses: actions/cache@v3
      id: cache_dependencies
      with:
        path: ${{ env.CACHED_DEPENDENCY_PATHS }}
        key: ${{ needs.prepare-dependency.outputs.dependency_cache_key }}

    - name: Install dependencies
      if: steps.cache_dependencies.outputs.cache-hit != 'true'
      run: tuist fetch

    - name: build tuist
      run: TUIST_CI=1 tuist build

  test:
    name: üß™ Test
    runs-on: macos-latest
    needs: prepare-dependency

    steps:
    - uses: actions/checkout@v2
      with:
        xcode-version: latest

    - name: install tuist
      run: curl -Ls https://install.tuist.io | bash

    - name: Check dependency cache
      uses: actions/cache@v3
      id: cache_dependencies
      with:
        path: ${{ env.CACHED_DEPENDENCY_PATHS }}
        key: ${{ needs.prepare-dependency.outputs.dependency_cache_key }}

    - name: Install dependencies
      if: steps.cache_dependencies.outputs.cache-hit != 'true'
      run: tuist fetch

    - name: test tuist
      run: TUIST_CI=1 tuist test
